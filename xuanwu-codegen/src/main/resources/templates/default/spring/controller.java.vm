package ${packageName}.controller.${version};

import lombok.RequiredArgsConstructor;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ${packageName}.domain.entity.${ClassName};
import ${packageName}.service.${ClassName}Service;
import top.wecoding.xuanwu.core.annotation.Version;
import top.wecoding.xuanwu.core.base.R;
import top.wecoding.xuanwu.core.exception.DateNotFoundException;

/**
 * ${tableComment} - API Controller
 *
 * @author ${author}
 * @since ${version}
 * @date ${datetime}
 */
@Version("${version}")
@RequiredArgsConstructor
@RestController("${className}Controller.${version}")
@RequestMapping("/api/${version}/${className}")
public class ${ClassName}Controller {

    private final ${ClassName}Service ${className}Service;

    @GetMapping("/{${pkColumn.genField}}")
    public R<${ClassName}> getInfo(@PathVariable("${pkColumn.genField}") ${pkColumn.genType} ${pkColumn.genField}) {
        return R.ok(${className}Service.getById(${pkColumn.genField}).orElseThrow(DateNotFoundException::new));
    }

    @PostMapping("")
    public R<${ClassName}> create(@RequestBody @Validated ${ClassName} ${className}) {
        return R.ok(${className}Service.create(${className}));
    }

    @PutMapping("")
    public R<${ClassName}> update(@RequestBody @Validated ${ClassName} ${className}) {
        return R.ok(${className}Service.updateById(${className}));
    }

    @DeleteMapping("/{${pkColumn.genField}}")
    public R<?> delete(@PathVariable("${pkColumn.genField}") ${pkColumn.genType} ${pkColumn.genField}) {
        ${className}Service.deleteById(${pkColumn.genField});
        return R.ok();
    }

}
