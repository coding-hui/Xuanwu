<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>top.wecoding.xuanwu</groupId>
    <artifactId>xuanwu-parent</artifactId>
    <version>0.9-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>21</java.version>

        <xuanwu.starter.version>0.9-SNAPSHOT</xuanwu.starter.version>

        <spring-ai.version>0.8.1-SNAPSHOT</spring-ai.version>

        <fastjson.version>1.2.83</fastjson.version>
        <httpclient5.version>5.2.1</httpclient5.version>
        <velocity.version>2.3</velocity.version>
        <velocity.tool.version>3.1</velocity.tool.version>
        <commons.io.version>2.13.0</commons.io.version>
        <mapstruct.version>1.5.3.Final</mapstruct.version>
        <lombok.version>1.18.30</lombok.version>
        <docker.plugin.version>0.43.4</docker.plugin.version>
        <docker.registry>devops-wecoding-docker.pkg.coding.net</docker.registry>
        <docker.namespace>wecoding/images</docker.namespace>

        <git.commit.plugin>6.0.0</git.commit.plugin>
        <spring.checkstyle.plugin>0.0.39</spring.checkstyle.plugin>
        <frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
    </properties>

    <modules>
        <module>xuanwu-codegen</module>
        <module>xuanwu-starter-parent</module>
        <module>xuanwu-starter-file-parent</module>
        <module>xuanwu-sdk-parent</module>
        <module>xuanwu-boot-parent</module>
        <module>xuanwu-mall</module>
        <module>xuanwu-ai-parent</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Spring AI -->
            <dependency>
                <groupId>org.springframework.ai</groupId>
                <artifactId>spring-ai-bom</artifactId>
                <version>0.8.1-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- Http client -->
            <dependency>
                <groupId>org.apache.httpcomponents.client5</groupId>
                <artifactId>httpclient5</artifactId>
                <version>${httpclient5.version}</version>
            </dependency>

            <!-- 代码生成使用模板 -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity.tools</groupId>
                <artifactId>velocity-tools-generic</artifactId>
                <version>${velocity.tool.version}</version>
            </dependency>

            <!-- io常用工具类 -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>

            <!-- MapStruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- xuanwu starters -->
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-parent</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-core</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-orm</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-metric</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-redis</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-mongo</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-printer</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>

            <!-- xuanwu file starters  -->
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-file-parent</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-starter-file-core</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>

            <!-- xuanwu sdk starters -->
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-sdk-parent</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-sdk-common</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
            <dependency>
                <groupId>top.wecoding.xuanwu</groupId>
                <artifactId>xuanwu-sdk-api</artifactId>
                <version>${xuanwu.starter.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.plugin.version}</version>
                    <configuration>
                        <!-- Docker 镜像私服-->
                        <registry>${docker.registry}</registry>
                        <skipPom>true</skipPom>
                        <images>
                            <image>
                                <!-- 镜像名称： registry/namespace/xuanwu-codegen:v1 -->
                                <name>${docker.registry}/${docker.namespace}/${project.name}:${project.version}</name>
                                <build>
                                    <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                </build>
                            </image>
                            <image>
                                <!-- 镜像名称： registry/namespace/xuanwu-codegen:latest -->
                                <name>${docker.registry}/${docker.namespace}/${project.name}:latest</name>
                                <build>
                                    <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                </build>
                            </image>
                        </images>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
                <version>${hibernate.version}</version>
                <executions>
                    <execution>
                        <id>enhance</id>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                        <configuration>
                            <enableLazyInitialization>true</enableLazyInitialization>
                            <enableDirtyTracking>true</enableDirtyTracking>
                            <enableAssociationManagement>true</enableAssociationManagement>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>generate-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html</backend>
                            <doctype>book</doctype>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.restdocs</groupId>
                        <artifactId>spring-restdocs-asciidoctor</artifactId>
                        <version>${spring-restdocs.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!--
            	代码格式插件，默认使用spring 规则，可运行命令进行项目格式化：./mvnw spring-javaformat:apply 或 mvn spring-javaformat:apply，可在IDEA中安装插件以下插件进行自动格式化：
            	https://repo1.maven.org/maven2/io/spring/javaformat/spring-javaformat-intellij-idea-plugin
            -->
            <plugin>
                <groupId>io.spring.javaformat</groupId>
                <artifactId>spring-javaformat-maven-plugin</artifactId>
                <version>${spring.checkstyle.plugin}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <inherited>true</inherited>
                    </execution>
                </executions>
            </plugin>
            <!-- git-commit-id-maven-plugin configuration -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>${git.commit.plugin}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <!-- Customize the date format if needed -->
                    <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
                        <includeOnlyProperty>^git.commit.(id|message|time).*$</includeOnlyProperty>
                    </includeOnlyProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

</project>
